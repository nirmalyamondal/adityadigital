import 'dart:convert';
import 'dart:io';

import 'package:flutter/cupertino.dart';
import 'package:json_table/json_table.dart';
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:url_launcher/url_launcher.dart';

class DashboardScreen extends StatefulWidget {
    @override
    _DashboardScreenState createState() => _DashboardScreenState();
}

class _DashboardScreenState extends State<DashboardScreen> {
  @override
  
  final String jsonProducts =
      '[{"uid":1,"product":"My Purchased product 1","amc":"23 Days","invoice":"http://www.africau.edu/images/default/sample.pdf"}, {"uid":2,"product":"My Purchased product 2","amc":"450 Days","invoice":"http://www.africau.edu/images/default/sample.pdf"},{"uid":3,"product":"My Purchased product 3","amc":"-100 Days","invoice":"http://www.africau.edu/images/default/sample.pdf"},{"uid":4,"product":"My Purchased product 4","amc":"11 Days","invoice":"http://www.africau.edu/images/default/sample.pdf"},{"uid":5,"product":"My Purchased product 5","amc":"-23 Days","invoice":"https://google.com/invoice5.pdf"}]';
  final String jsonTasks =
      '[{"uid": 1, "id":"MB20201109001","product":"My product 1","technician":"9609495886","dlink":"https://google.com/index.php?id=1&pid=1"},{"uid": 2, "id":"MB20201109002","product":"My product 2","technician":"9609495886","dlink":"https://google.com/index.php?id=1&pid=2"},{"uid": 3, "id":"MB20201109003","product":"My product 3","technician":"9609495886","dlink":"https://google.com/index.php?id=1&pid=3"},{"uid": 4, "id":"MB20201109004","product":"My product 4","technician":"9609495886","dlink":"https://google.com/index.php?id=1&pid=4"},{"uid": 5, "id":"MB20201109005","product":"My product 5","technician":"9609495886","dlink":"https://google.com/index.php?id=1&pid=5"},{"uid": 6, "id":"MB20201109006","product":"My product 6","technician":"9609495886","dlink":"https://google.com/index.php?id=1&pid=6"}]';

  bool toggle = true;
  //Create your column list
  var columnsProducts = [
    JsonTableColumn('product', label: 'Product'),
    JsonTableColumn('amc', label: 'AMC Expiry'),
    //JsonTableColumn('invoice', label: 'Download Invoice'),
    JsonTableColumn('invoice', label: 'Invoice', valueBuilder: generateProductInvoice),
  ];
  //Create your column list
  var columnsTasks = [
    JsonTableColumn('id', label: 'Task Id'),
    JsonTableColumn('product', label: 'Product'),
    JsonTableColumn('technician', label: 'Technician'),
    JsonTableColumn('dlink', label: 'Detail', valueBuilder: generateTaskDetail),
  ];
  //Simply pass this column list to JsonTable
  //child: JsonTable(json,columns: columns)
    @override
  Widget build(BuildContext context) {
      //bool viewVisible = true ;
    final args = ModalRoute.of(context).settings.arguments;
    //final SharedPreferences prefs = await SharedPreferences.getInstance();
    //final loggedInMobile = prefs.getString('loggedInMobile');
    final jsonProductsDecode = jsonDecode(jsonProducts);
    final jsonTasksDecode = jsonDecode(jsonTasks);
    return Scaffold(
      appBar: AppBar(
        leading: BackButton(
            //icon: new Icon(Icons.close),
            color: Colors.white,
            //onPressed: ()=> exit(0),
        ),
        title: Text('Aditya Digital Services'),
        centerTitle: true,
        actions: <Widget>[
          new IconButton(
            icon: new Icon(Icons.close),
            onPressed: ()=> exit(0),
            //onPressed: ()=> logoutUser(),
          ),
        ],
      ),
      body: SingleChildScrollView(
        //padding: EdgeInsets.all(16.0),
        child: Container(
          child: toggle
              ? Column(
            children:  [
              Container(
                padding: new EdgeInsets.only(top:0.0,bottom:0.0),
                margin: const EdgeInsets.only(top:5.0),
                //color: Colors.indigo, // Yellow
                alignment: Alignment.center,
                //child: Text('Welcome, Aditya Kwity \n You are loggedin with +91 ${args}', textAlign: TextAlign.center,
                //    style: TextStyle(fontWeight: FontWeight.bold, height: 1.75, fontSize: 16, color: Colors.black), softWrap: true),
                child: Text('Welcome, Aditya Kwity [${args}]', textAlign: TextAlign.center,
                    style: TextStyle(fontWeight: FontWeight.bold, height: 1.75, fontSize: 16, color: Colors.black), softWrap: true),
              ),
              /*Container(
                padding: new EdgeInsets.only(top:0.0,bottom:0.0,right:15.0),
                margin: const EdgeInsets.only(top:0.0,bottom:0.0),
                //color: Color(0xFF151026),
                alignment: Alignment.centerRight,
                //child: Text('Your Tickets'),
                child: MaterialButton(
                  //shape: RoundedRectangleBorder(borderRadius:BorderRadius.circular(22.0) ),
                  padding: EdgeInsets.only(top:0.0,bottom:0.0,right:0.0,left:0.0),
                  minWidth: 0,
                  //color: Color(0xFF151026),
                  // icon: new Icon(Icons.close), IconData(0xe848, fontFamily: 'MaterialIcons')
                  child: Text('Add New Ticket', textAlign: TextAlign.right,
                      style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16)),
                  onPressed: () {
                    Navigator.pushReplacementNamed(context, '/taskScreen', arguments: '${args}');
                  },
                ),
              ),*/
              Container(
                width: 110.0,
                height: 30.0,
                alignment: Alignment.centerRight,
                child: RaisedButton(
                  color: Color(0XFFFF0000),
                  child: Row(
                    children: <Widget>[
                      Icon(Icons.exit_to_app, color: Colors.black),
                      Text(' Logout', textAlign: TextAlign.right, style: TextStyle(color: Colors.white),),
                    ],
                  ),
                  onPressed: () {
                    logoutUser();
                    Navigator.pushReplacementNamed(context, '/taskScreen', arguments: '${args}');
                  },
                ),
              ),
              /*Container(
                padding: new EdgeInsets.only(top:0.0,bottom:0.0,right:15.0),
                margin: const EdgeInsets.only(top:0.0,bottom:0.0),
                color: Colors.white,
                alignment: Alignment.centerRight,
                //child: Text('Your Tickets'),
                child: MaterialButton(
                  shape: RoundedRectangleBorder(borderRadius:BorderRadius.circular(22.0) ),
                  padding: EdgeInsets.only(top:5.0,bottom:5.0,right:25.0,left:25.0),
                  minWidth: 0,
                  color: Color(0xFF151026),
                  child: Text('Add New Ticket', textAlign: TextAlign.right,
                      style: TextStyle(fontWeight: FontWeight.bold, height: 1.25, fontSize: 16, color: Colors.white)),
                  onPressed: () {
                    Navigator.pushReplacementNamed(context, '/taskScreen', arguments: '${args}');
                  },
                ),
              ),*/
              Container(
                padding: new EdgeInsets.only(top:0.0,bottom:5.0,left:15.0),
                margin: const EdgeInsets.only(top:0.0,bottom:5.0),
                color: Colors.grey, // Yellow
                alignment: Alignment.centerLeft,
                child: Text('Your Tickets', textAlign: TextAlign.left,
                    style: TextStyle(fontWeight: FontWeight.bold, height: 1.75, fontSize: 16, color: Colors.black), softWrap: true),
              ),
              /*
              Row(
                children: [
                  Expanded(child: Container(
                    padding: new EdgeInsets.only(top:0.0,bottom:5.0,left:15.0),
                    margin: const EdgeInsets.only(top:0.0,bottom:0.0),
                    color: Colors.grey, // Yellow
                    alignment: Alignment.centerLeft,
                    child: Text('Your Tickets', textAlign: TextAlign.left,
                        style: TextStyle(fontWeight: FontWeight.bold, height: 1.75, fontSize: 16, color: Colors.black), softWrap: true),
                  )),
                  Expanded(child: Container(
                    padding: new EdgeInsets.only(top:0.0,bottom:0.0,right:15.0),
                    margin: const EdgeInsets.only(top:0.0,bottom:0.0),
                    color: Colors.white,
                    alignment: Alignment.centerRight,
                    //child: Text('Your Tickets'),
                    child: MaterialButton(
                      padding: EdgeInsets.all(0),
                     minWidth: 0,
                      child: Text('Add New Ticket', textAlign: TextAlign.right,
                          style: TextStyle(fontWeight: FontWeight.bold, height: 1.25, fontSize: 16, color: Colors.black)),
                      onPressed: () {
                        Navigator.pushReplacementNamed(context, '/taskScreen', arguments: '${args}');
                      },
                    ),
                  )),
                ],
              ),*/
              Container(
                padding: new EdgeInsets.only(left:15.0),
                color: Colors.white, // Yellow
                alignment: Alignment.centerLeft,
                child: JsonTable(
                  jsonTasksDecode,
                  columns: columnsTasks,
                  showColumnToggle: false,
                  allowRowHighlight: true,
                  rowHighlightColor: Colors.yellow[500].withOpacity(0.7),
                  //paginationRowCount: 10,
                  onRowSelect: (index, map) {
                    var _dlink = map['dlink'];
                    Navigator.pushReplacementNamed(
                        context,
                        '/detailScreen',
                        arguments: {'_contact':'${args}' , '_dlink': _dlink}
                    );
                  },
                  tableCellBuilder: (value) {
                    return Container(
                      padding: EdgeInsets.symmetric(horizontal: 5.0, vertical: 5.0),
                      decoration: BoxDecoration(border:Border.all(width: 0.5, color: Colors.grey.withOpacity(0.5))),
                      child: Text(value),
                    );
                  },
                ),
              ),
              Container(
                padding: new EdgeInsets.only(top:0.0,bottom:5.0,left:15.0),
                margin: const EdgeInsets.only(top:10.0,bottom:5.0),
                color: Colors.grey, // Yellow
                alignment: Alignment.centerLeft,
                child: Text('Your Products', textAlign: TextAlign.left,
                    style: TextStyle(fontWeight: FontWeight.bold, height: 1.75, fontSize: 16, color: Colors.black), softWrap: true),
              ),
              new Container(
                padding: new EdgeInsets.only(left:15.0),
                color: Colors.white, // Yellow
                alignment: Alignment.centerLeft,
                child: JsonTable(
                  jsonProductsDecode,
                  columns: columnsProducts,
                  showColumnToggle: false,
                  allowRowHighlight: true,
                  rowHighlightColor: Colors.yellow[500].withOpacity(0.7),
                  //paginationRowCount: 10,
                  onRowSelect: (index, map) {
                    final String invoiceUrl = map['invoice'];
                    launch(invoiceUrl);
                    //showAlertDialog(context, invoiceUrl);
                  },
                  tableCellBuilder: (value) {
                    return Container(
                      padding: EdgeInsets.symmetric(horizontal: 5.0, vertical: 5.0),
                      decoration: BoxDecoration(border:Border.all(width: 0.5, color: Colors.grey.withOpacity(0.5))),
                      child: Text(value),
                    );
                  },
                ),
              ),

              Container(
                alignment: Alignment.center,
                child: MaterialButton(
                  child: Text('Go To Web Version', style: new TextStyle(fontSize: 14.0, color: Colors.red)),
                  onPressed: () {
                    final String websiteUrl = 'https://www.adityaonline.in/';
                    launch(websiteUrl);
                  },
                ),
              ),
            ],
          )
          : Center(
            //child: Text(getPrettyJSONString(jsonSample)),
          ),
        ),
      ),
      bottomNavigationBar: new Container(
        //color: const Color.fromARGB(255, 253, 188, 51),
        color: Color(0xFF151026),
        child: MaterialButton(
          //child: Text('Logout', style: new TextStyle(fontSize: 14.0, color: Colors.red)),
          child: Text('Logout', textAlign: TextAlign.center,
              style: TextStyle(fontWeight: FontWeight.bold, height: 1.75, fontSize: 16, color: Colors.white), softWrap: true),
          onPressed: ()=> logoutUser(),
        ),
      ),
    );
  }

  void logoutUser() async {
    final SharedPreferences prefs = await SharedPreferences.getInstance();
    prefs.setString('loggedInMobile', '');
    exit(0);
  }

  //Invoice valueBuilder
  static String generateProductInvoice(value) {
     //return htmlEscape.convert(value);
   return 'Click';
  }
  //Invoice valueBuilder
  static String generateTaskDetail(value) {
    //return htmlEscape.convert(value);
    return 'Click';
  }

  //Basic alert dialogue for alert errors and confirmations
  void showAlertDialog(BuildContext context, String message) {
    // set up the AlertDialog
    final CupertinoAlertDialog alert = CupertinoAlertDialog(
      title: const Text('Error'),
      content: Text('\n$message'),
      actions: <Widget>[
        CupertinoDialogAction(
          isDefaultAction: true,
          child: const Text('Ok'),
          onPressed: () {
            Navigator.of(context).pop();
          },
        )
      ],
    );
    // show the dialog
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return alert;
      },
    );
  }
}